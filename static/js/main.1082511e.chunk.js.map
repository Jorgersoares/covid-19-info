{"version":3,"sources":["Components/Chart/index.js","Components/Top5Countries/index.js","Components/ChartModal/index.js","Services/index.js","Pages/Dashboard/index.js","App.js","index.js"],"names":["useStyles","makeStyles","chartPaper","width","Chart","props","classes","configObj","dataPie","labels","countrie","TotalConfirmed","TotalRecovered","TotalDeaths","datasets","data","backgroundColor","hoverBackgroundColor","JSON","stringify","Fragment","Alert","severity","Paper","elevation","className","Country","options","responsive","tooltips","enabled","root","display","flexDirection","alignItems","minWidth","transition","willChange","transform","card","Top5Countries","Grid","container","justify","spacing","countries","sort","a","b","slice","generateTop5Countries","map","item","key","Card","CardContent","src","getCode","alt","CardActions","Button","size","onClick","function","id","ChartModal","Dialog","open","onClose","close","maxWidth","fullWidth","ApiService","api","axios","create","baseURL","GetCountries","get","title","margin","appBarColor","color","top_main_section","marginTop","marginBottom","height","chartContent","justifyContent","selectContent","countryTop5","countryTop5Cards","footer","react","marginLeft","DashBoard","useState","setCountries","countrieSelected","setCountrieSelected","setOpen","modalCountry","setModalCountry","useEffect","then","response","Countries","brazil","find","catch","err","alert","fetchData","AppBar","position","Toolbar","Typography","variant","Container","fixed","lg","xs","Autocomplete","freeSolo","style","getOptionLabel","option","renderInput","params","TextField","label","onChange","event","value","reason","console","log","country","country_target","href","target","rel","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1082511e.chunk.js","sourcesContent":["/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { Pie } from 'react-chartjs-2';\n\n//Material ui\nimport Alert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles({\n    chartPaper: {\n        width: '100%',\n    }\n});\n\nexport default function Chart(props) {\n    const classes = useStyles();\n\n    const configObj = {\n        dataPie: {\n            labels: [`Casos confirmados ${props.countrie.TotalConfirmed}`,\n            `Curados ${props.countrie.TotalRecovered}`,\n            `Mortes ${props.countrie.TotalDeaths}`\n            ],\n            datasets: [\n                {\n                    data: [props.countrie.TotalConfirmed, props.countrie.TotalRecovered, props.countrie.TotalDeaths],\n                    backgroundColor: [\n                        '#F7464A',\n                        '#46BFBD',\n                        '#FDB45C',\n                    ],\n                    hoverBackgroundColor: [\n                        '#FF5A5E',\n                        '#5AD3D1',\n                        '#FFC870',\n                    ]\n                }\n            ]\n        }\n    };\n\n    if (JSON.stringify(props.countrie) === '{}') {\n        return (\n            <React.Fragment>\n                <Alert severity=\"info\">Escolha um país para ver o gráfico do número de casos</Alert>\n            </React.Fragment>\n        );\n    }\n\n    return (\n        <React.Fragment>\n            <Paper elevation={3} className={classes.chartPaper}>\n                <Alert severity=\"success\">Visualizando casos em {props.countrie.Country} </Alert>\n                <Pie\n                    data={configObj.dataPie} options={{\n                        responsive: true, tooltips: {\n                            enabled: false\n                        }\n                    }}\n                />\n            </Paper>\n        </React.Fragment>\n    );\n}","import React from 'react';\nimport { getCode } from 'country-list';\n\n//Material ui\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        minWidth: 200,\n        transition: 'transform 0.5s',\n        willChange: 'transform',\n        '&:hover': {\n            transform: 'translateY(10px)',\n        }\n    },\n    card: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    }\n});\n\nexport default function Top5Countries(props) {\n    const classes = useStyles();\n\n    function generateTop5Countries() {\n        const { countries } = props;\n        const top5arr = [...countries];\n        return top5arr.sort((a, b) => (a.TotalConfirmed > b.TotalConfirmed) ? -1 : 1).slice(0, 5);\n    }\n\n    return (\n        <div>\n            <Grid container justify=\"center\" spacing={1}>\n                {generateTop5Countries().map(countrie => {\n                    return (\n                        <Grid item key={countrie.Country}>\n                            <Card className={classes.root}>\n                                <CardContent className={classes.card}>\n                                    <p>{countrie.Country}</p>\n                                    <img src={`https://www.countryflags.io/${getCode(countrie.Country)}/flat/64.png`} alt='flag' />\n                                </CardContent>\n                                <CardActions>\n                                    <Button size=\"small\" onClick={() => props.function(countrie.Country)} id={countrie.Country}>Ver gráfico</Button>\n                                </CardActions>\n                            </Card>\n                        </Grid>\n                    );\n                })}\n            </Grid>\n        </div>\n    );\n}\n","import React from 'react'\n\n//Material ui\nimport Dialog from '@material-ui/core/Dialog';\n\n//Custom components\nimport Chart from '../Chart';\n\nexport default function ChartModal(props) {\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.close}\n            maxWidth='sm'\n            fullWidth={true}>\n            <Chart countrie={props.countrie} />\n        </Dialog>\n    );\n}\n","import axios from 'axios';\n\nconst ApiService = {\n    api : axios.create({\n        baseURL: 'https://api.covid19api.com/'\n    }),\n    \n    async GetCountries() {\n        return await this.api.get('summary');\n    }\n};\n\nexport default ApiService;","import React, { useState, useEffect } from 'react';\n\n//Material ui\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\n\n//Custom components\nimport Chart from '../../Components/Chart';\nimport Top5Countries from '../../Components/Top5Countries';\nimport ChartModal from '../../Components/ChartModal';\n\n//Icons\nimport { FaReact } from 'react-icons/fa';\n\n//Service\nimport ApiService from '../../Services';\n\nconst useStyles = makeStyles({\n    title: {\n        margin: 'auto auto'\n    },\n    appBarColor: {\n        backgroundColor: '#1b262c',\n        color: '#fff'\n    },\n    top_main_section: {\n        marginTop: '60px',\n        marginBottom: '100px',\n        height: '35vh'\n    },\n    chartContent: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    selectContent: {\n        marginTop: '20px',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    countryTop5: {\n        backgroundColor: '#0f4c81',\n        width: '100%',\n        height: '49px',\n        marginTop: '50px',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        color: '#FFF'\n    },\n    countryTop5Cards: {\n        marginTop: '20px'\n    },\n    footer: {\n        backgroundColor: '#1b262c',\n        width: '100%',\n        height: '60px',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginTop: '100px',\n        color: '#fff'\n    },\n    react: {\n        marginLeft: '5px',\n        color: '#61dbfb'\n    }\n});\n\nexport default function DashBoard() {\n    const classes = useStyles();\n\n    const [countries, setCountries] = useState([]);\n\n    const [countrieSelected, setCountrieSelected] = useState({});\n\n    const [open, setOpen] = useState(false);\n\n    const [modalCountry, setModalCountry] = useState({});\n\n    useEffect(() => {\n        async function fetchData() {\n            await ApiService.GetCountries().then(response => {\n                const { Countries } = response.data;\n                const brazil = Countries.find(item => item.Country === 'Brazil');\n                setCountrieSelected(brazil);\n                setCountries(Countries);\n            }).catch(err => {\n                alert('Erro ao buscar dados no servidor');\n            });\n        }\n        fetchData();\n    }, []);\n\n    function handleSelectCountry(event, value, reason) {\n        console.log(value);\n        switch (reason) {\n            case 'select-option':\n                var country = countries.find(countrie => countrie.Country === value.Country);\n                if (!country)\n                    return alert('Erro ao buscar dados desse país, tente novamente');\n                setCountrieSelected(country);\n                break;\n\n            case 'clear':\n                setCountrieSelected({});\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    function handleButtonCountryCard(country) {\n        const country_target = countries.find(countrie => countrie.Country === country);\n        if (!country)\n            return alert('Erro ao buscar dados desse país, tente novamente');\n        setModalCountry(country_target);\n        setOpen(true);\n    }\n\n    function handleCloseModal() {\n        setOpen(false);\n    }\n\n    return (\n        <div>\n            <nav>\n                <AppBar position=\"static\" className={classes.appBarColor}>\n                    <Toolbar>\n                        <Typography variant=\"h6\" className={classes.title}>\n                            Covid-19 Info\n\t\t\t\t\t\t</Typography>\n                    </Toolbar>\n                </AppBar>\n            </nav>\n\n            <main>\n                <Container fixed>\n                    <Grid container className={classes.top_main_section}>\n\n                        <Grid item lg={6} xs={12} className={classes.chartContent}>\n                            <Chart countrie={countrieSelected} />\n                        </Grid>\n\n                        <Grid item lg={6} xs={12} className={classes.selectContent}>\n                            <Autocomplete\n                                id=\"country-select-demo\"\n                                freeSolo\n                                style={{ width: '80%' }}\n                                options={countries}\n                                getOptionLabel={(option) => option.Country}\n                                renderInput={(params) => (\n                                    <TextField\n                                        {...params}\n                                        label=\"Pesquise e escolha um país\"\n                                        variant=\"outlined\"\n                                    />\n                                )}\n                                onChange={handleSelectCountry}\n                            />\n                        </Grid>\n\n                    </Grid>\n\n                    <Grid container>\n                        <Grid item lg={12} className={classes.countryTop5}>\n                            <Typography variant=\"h6\">\n                                Top 5 de países com mais casos\n                            </Typography>\n                        </Grid>\n                    </Grid>\n\n                    <Grid container className={classes.countryTop5Cards}>\n                        <Grid item xs={12}>\n                            <Top5Countries countries={countries} function={handleButtonCountryCard} />\n                        </Grid>\n                    </Grid>\n\n                    <ChartModal open={open} countrie={modalCountry} close={handleCloseModal} />\n\n                </Container>\n            </main>\n\n            <footer>\n                <div\n                    className={classes.footer}>Made with\n                    <span className={classes.react}>\n                        <a href=\"https://pt-br.reactjs.org/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                            <FaReact />\n                        </a>\n                    </span>\n                </div>\n            </footer>\n        </div>\n    );\n}","import React from 'react';\n\nimport Dashboard from './Pages/Dashboard';\n\nfunction App() {\n\treturn (\n\t\t<Dashboard />\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './global.css';\nimport App from './App';\n\nReactDOM.render(\n\t<App />,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}